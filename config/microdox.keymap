/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE    0
#define NAV     1
#define BTOOTH  2
#define MEDIA   3
#define NUM     4
#define SYM     5
#define FUNC    6

/ {
        behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        wm: winkey_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "WINKEY_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        sm: shift_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "SHIFT_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        test: grave_escape {
                compatible = "zmk,behavior-mod-morph";
                label = "GRAVE_ESCAPE";
                #binding-cells = <0>;
                bindings = <&kp ESC>, <&kp GRAVE>;
                mods = <(MOD_LCTL)>;
        };
    };
    
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &test      &kp W      &kp F         &kp P         &kp B              &kp J         &kp L        &kp U         &kp Y        &kp SQT
   &wm LGUI A &hm LALT R &hm LCTRL S   &sm LSHFT T   &kp G              &kp M         &sm RSHFT N  &hm RCTRL E   &hm RALT I   &wm RGUI O
   &kp Z      &kp X      &kp C         &kp D         &kp V              &kp K         &kp H        &kp COMMA     &kp DOT      &kp FSLH
                         &lt MEDIA ESC &lt NAV SPACE &lt BTOOTH TAB     &lt SYM ENTER &lt NUM BSPC &lt FUNC DEL
                        >;
                };

                nav_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &none      &none      &none         &none         &none              &kp LC(Y)     &kp LC(V)    &kp LC(C)     &kp LC(X)    &kp LC(Z)
   &kp LGUI   &kp LALT   &kp LCTRL     &kp LSHFT     &none              &kp CAPSLOCK  &kp LEFT     &kp DOWN      &kp UP       &kp RIGHT
   &none      &none      &none         &none         &none              &kp INSERT    &kp HOME     &kp PG_DN     &kp PG_UP    &kp END
                         &none         &none         &none              &kp ENTER     &kp BSPC     &kp DEL
                        >;
                };

                btooth_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &none      &none      &none         &none         &none              &none         &none        &none         &none        &none
   &kp LGUI   &kp LALT   &kp LCTRL     &kp LSHFT     &none              &none         &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2 &bt BT_SEL 3
   &none      &none      &none         &none         &none              &none         &reset       &bootloader   &none        &none
                         &none         &none         &none              &bt BT_PRV    &bt BT_NXT   &bt BT_CLR
                        >;
                };

                media_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &none      &none      &none         &none         &none              &none         &none        &none         &none        &none
   &kp LGUI   &kp LALT   &kp LCTRL     &kp LSHFT     &none              &none         &kp C_PREV   &kp C_VOL_DN  &kp C_VOL_UP &kp C_NEXT
   &none      &none      &none         &none         &none              &none         &none        &none         &none        &none
                         &none         &none         &none              &kp C_PAUSE   &kp C_PLAY     &kp C_MUTE
                        >;
                };

                num_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &kp LBKT   &kp N7     &kp N8        &kp N9        &kp RBKT           &none         &none        &none         &none        &none
   &kp SEMI   &kp N4     &kp N5        &kp N6        &kp EQUAL          &none         &kp RSHFT    &kp RCTRL     &kp RALT     &kp RGUI
   &kp GRAVE  &kp N1     &kp N2        &kp N3        &kp BSLH           &none         &none        &none         &none        &none
                         &kp DOT       &kp N0        &kp MINUS          &none         &none        &none
                        >;
                };

                sym_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &kp LBRC   &kp AMPS   &kp ASTRK     &kp LPAR      &kp RBRC           &none         &none        &none         &none        &none
   &kp COLON  &kp DLLR   &kp PRCNT     &kp CARET     &kp PLUS           &none         &kp RSHFT    &kp RCTRL     &kp RALT     &kp RGUI
   &kp TILDE  &kp EXCL   &kp AT        &kp HASH      &kp PIPE           &none         &none        &none         &none        &none
                         &kp GT        &kp RPAR      &kp UNDER          &none         &none        &none
                        >;
                };

                func_layer {
// -----------------------------------------------------------------------------------------
// |  Q  |  W  |  F  |  P  |  B   |   |  J  |  L   |  U  |  Y  |  '  |
// |  A  |  R  |  S  |  T  |  G   |   |  M  |  N   |  E  |  I  |  O  |
// |  Z  |  X  |  C  |  D  |  V   |   |  K  |  H   |  ,  |  .  |  /  |
//             | ESC | SPC | TAB  |   | ENT | BKSP | DEL |
                        bindings = <
   &kp F12    &kp F7     &kp F8        &kp F9        &kp PSCRN          &none         &none        &none         &none        &none
   &kp F11    &kp F4     &kp F5        &kp F6        &kp SLCK           &none         &kp RSHFT    &kp RCTRL     &kp RALT     &kp RGUI
   &kp F10    &kp F1     &kp F2        &kp F3        &kp PAUSE_BREAK    &none         &none        &none         &none        &none
                         &kp ESC       &kp SPACE     &kp TAB            &none         &none        &none
                        >;
                };


        };
};